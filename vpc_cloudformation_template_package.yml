Description: This template deploys a VPC, with a pair of public and private subnets
  spread across two Availability Zones. It deploys an Internet Gateway, with a default
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
  and default routes for them in the private subnets.
Outputs:
  NoIngressSecurityGroup:
    Description: Security group with no ingress rule
    Export:
      Name: LambdaVPCExperiementSecurityGroup
    Value:
      Ref: NoIngressSecurityGroup
  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value:
      Ref: PrivateSubnet1
  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value:
      Ref: PrivateSubnet2
  PrivateSubnets:
    Description: A list of the private subnets
    Export:
      Name: LambdaVPCExperiementPrivateSubnets
    Value:
      Fn::Join:
      - ','
      - - Ref: PrivateSubnet1
        - Ref: PrivateSubnet2
  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value:
      Ref: PublicSubnet1
  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value:
      Ref: PublicSubnet2
  PublicSubnets:
    Description: A list of the public subnets
    Export:
      Name: LambdaVPCExperiementPublicSubnets
    Value:
      Fn::Join:
      - ','
      - - Ref: PublicSubnet1
        - Ref: PublicSubnet2
  VPC:
    Description: A reference to the created VPC
    Export:
      Name: LambdaVPCExperiement
    Value:
      Ref: VPC
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  PrivateSubnet1CIDR:
    Default: 10.192.20.0/24
    Description: Please enter the IP range (CIDR notation) for the private subnet
      in the first Availability Zone
    Type: String
  PrivateSubnet2CIDR:
    Default: 10.192.21.0/24
    Description: Please enter the IP range (CIDR notation) for the private subnet
      in the second Availability Zone
    Type: String
  PublicSubnet1CIDR:
    Default: 10.192.10.0/24
    Description: Please enter the IP range (CIDR notation) for the public subnet in
      the first Availability Zone
    Type: String
  PublicSubnet2CIDR:
    Default: 10.192.11.0/24
    Description: Please enter the IP range (CIDR notation) for the public subnet in
      the second Availability Zone
    Type: String
  VpcCIDR:
    Default: 10.192.0.0/16
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
Resources:
  DefaultPrivateRoute1:
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway1
      RouteTableId:
        Ref: PrivateRouteTable1
    Type: AWS::EC2::Route
  DefaultPrivateRoute2:
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway2
      RouteTableId:
        Ref: PrivateRouteTable2
    Type: AWS::EC2::Route
  DefaultPublicRoute:
    DependsOn: InternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTable
    Type: AWS::EC2::Route
  InternetGateway:
    Properties:
      Tags:
      - Key: Name
        Value:
          Ref: EnvironmentName
    Type: AWS::EC2::InternetGateway
  InternetGatewayAttachment:
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC
    Type: AWS::EC2::VPCGatewayAttachment
  NatGateway1:
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NatGateway1EIP
        - AllocationId
      SubnetId:
        Ref: PublicSubnet1
    Type: AWS::EC2::NatGateway
  NatGateway1EIP:
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  NatGateway2:
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NatGateway2EIP
        - AllocationId
      SubnetId:
        Ref: PublicSubnet2
    Type: AWS::EC2::NatGateway
  NatGateway2EIP:
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  NoIngressSecurityGroup:
    Properties:
      GroupDescription: Security group with no ingress rule
      GroupName: no-ingress-sg
      VpcId:
        Ref: VPC
    Type: AWS::EC2::SecurityGroup
  PrivateRouteTable1:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${EnvironmentName} Private Routes (AZ1)
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  PrivateRouteTable2:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${EnvironmentName} Private Routes (AZ2)
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  PrivateSubnet1:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: ''
      CidrBlock:
        Ref: PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${EnvironmentName} Private Subnet (AZ1)
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  PrivateSubnet1RouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable1
      SubnetId:
        Ref: PrivateSubnet1
    Type: AWS::EC2::SubnetRouteTableAssociation
  PrivateSubnet2:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs: ''
      CidrBlock:
        Ref: PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${EnvironmentName} Private Subnet (AZ2)
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  PrivateSubnet2RouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable2
      SubnetId:
        Ref: PrivateSubnet2
    Type: AWS::EC2::SubnetRouteTableAssociation
  PublicRouteTable:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${EnvironmentName} Public Routes
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  PublicSubnet1:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: ''
      CidrBlock:
        Ref: PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${EnvironmentName} Public Subnet (AZ1)
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  PublicSubnet1RouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet1
    Type: AWS::EC2::SubnetRouteTableAssociation
  PublicSubnet2:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs: ''
      CidrBlock:
        Ref: PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${EnvironmentName} Public Subnet (AZ2)
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  PublicSubnet2RouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet2
    Type: AWS::EC2::SubnetRouteTableAssociation
  VPC:
    Properties:
      CidrBlock:
        Ref: VpcCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
      - Key: Name
        Value:
          Ref: EnvironmentName
    Type: AWS::EC2::VPC
